/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the application plugin to add support for building an application
    id 'application'

    // webdriver binaries
    id "com.github.erdi.webdriver-binaries" version "2.1"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.6'

    // Use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
    testCompile ("com.athaydes:spock-reports:1.6.0") { transitive = false }

    // recommended for logging
    testCompile 'org.slf4j:slf4j-api:1.7.13'
    testCompile 'org.slf4j:slf4j-simple:1.7.13'

    // for Geb
    compile "org.gebish:geb-spock:2.3.1"
    // compile "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    compile "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
    compile "org.seleniumhq.selenium:selenium-support:3.14.0"
}
//configure docToolchain to use the main project's config
project('docToolchain') {
    if (project.hasProperty('docDir')) {
        docDir = '../.'
        mainConfigFile = 'config/docToolchain.groovy'
    } else {
        println "="*80
        println "  please initialize the docToolchain submodule"
        println "  by executing git submodule update -i"
        println "="*80
    }
}

// https://github.com/erdi/webdriver-binaries-gradle-plugin
webdriverBinaries {

    chromedriver {
        driverUrlsConfiguration = resources.text.fromFile('src/test/resources/webdriverUrls.json')
        version = '73.0.3683.68'
    }

    geckodriver '0.24.0'
    //iedriverserver '3.8.0'
}

test {
    // let's you start gradle with an option:
    // gradle -Dtest.ignoreFailures=true test
    ignoreFailures Boolean.getBoolean("test.ignoreFailures")
}

// Define the main class for the application
mainClassName = 'demo.App'
